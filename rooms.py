import discord
from discord.ext import commands
import asyncio

def setup(bot):
    intents = discord.Intents.default()
    intents.voice_states = True
    intents.members = True
    intents.message_content = True

    # ID —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    JOIN_CHANNEL_ID = 1374700290539917434  # ‚Üê –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à

    # –•—Ä–∞–Ω–∏–ª–∏—â–µ: {voice_channel_id: (owner, text_channel)}
    private_rooms = {}

    @bot.event
    async def on_ready():
        print(f'rooms.py setup complete')

    class RoomControlView(discord.ui.View):
        def __init__(self, owner, voice_channel, text_channel):
            super().__init__(timeout=None)
            self.owner = owner
            self.voice_channel = voice_channel
            self.text_channel = text_channel

        async def interaction_check(self, interaction: discord.Interaction):
            if interaction.user != self.owner:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)
                return False
            return True

        @discord.ui.button(label="‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", style=discord.ButtonStyle.green)
        async def invite_member(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.send_message("–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: `@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`", ephemeral=True)

            try:
                msg = await bot.wait_for('message', check=lambda m: m.author == interaction.user and m.channel == interaction.channel, timeout=30)
                member = msg.mentions[0]
                await self.voice_channel.set_permissions(member, connect=True)
                await self.text_channel.set_permissions(member, view_channel=True, send_messages=True)
                await interaction.followup.send(f"{member.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –∑–∞–π—Ç–∏ –∏ –ø–∏—Å–∞—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É.")
            except asyncio.TimeoutError:
                await interaction.followup.send("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.", ephemeral=True)
            except IndexError:
                await interaction.followup.send("–ù–µ —É–∫–∞–∑–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫.", ephemeral=True)

        @discord.ui.button(label="‚ûñ –í—ã–≥–Ω–∞—Ç—å", style=discord.ButtonStyle.red)
        async def kick_member(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.send_message("–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –≤—ã–≥–æ–Ω–∞: `@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`", ephemeral=True)

            try:
                msg = await bot.wait_for('message', check=lambda m: m.author == interaction.user and m.channel == interaction.channel, timeout=30)
                member = msg.mentions[0]

                if member not in self.voice_channel.members:
                    await interaction.followup.send(f"{member.mention} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–º–Ω–∞—Ç–µ.", ephemeral=True)
                    return

                await self.voice_channel.set_permissions(member, overwrite=None)
                await self.text_channel.set_permissions(member, overwrite=None)

                join_channel = bot.get_channel(JOIN_CHANNEL_ID)
                if join_channel and isinstance(join_channel, discord.VoiceChannel):
                    await member.move_to(join_channel)

                await interaction.followup.send(f"{member.mention} –±—ã–ª –≤—ã–≥–Ω–∞–Ω –∏–∑ –∫–æ–º–Ω–∞—Ç—ã.")

            except asyncio.TimeoutError:
                await interaction.followup.send("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.", ephemeral=True)
            except IndexError:
                await interaction.followup.send("–ù–µ —É–∫–∞–∑–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫.", ephemeral=True)

        @discord.ui.button(label="üîí –ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É", style=discord.ButtonStyle.blurple)
        async def close_room(self, interaction: discord.Interaction, button: discord.ui.Button):
            everyone = self.voice_channel.guild.default_role

            # –£–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø —É –≤—Å–µ—Ö
            await self.voice_channel.set_permissions(everyone, connect=False)
            await self.text_channel.set_permissions(everyone, view_channel=False, send_messages=False)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É
            await self.voice_channel.set_permissions(self.owner, connect=True, manage_channels=True)
            await self.text_channel.set_permissions(self.owner, view_channel=True, send_messages=True, manage_channels=True)

            await interaction.response.send_message("–ö–æ–º–Ω–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞ –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –≤–∞—Å.", ephemeral=True)

        @discord.ui.button(label="üîì –û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É", style=discord.ButtonStyle.gray)
        async def open_room(self, interaction: discord.Interaction, button: discord.ui.Button):
            everyone = self.voice_channel.guild.default_role

            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—â–∏–µ –ø—Ä–∞–≤–∞
            await self.voice_channel.set_permissions(everyone, connect=True)
            await self.text_channel.set_permissions(everyone, view_channel=True, send_messages=True)

            # –í–ª–∞–¥–µ–ª–µ—Ü —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
            await self.voice_channel.set_permissions(self.owner, connect=True, manage_channels=True)
            await self.text_channel.set_permissions(self.owner, view_channel=True, send_messages=True, manage_channels=True)

            await interaction.response.send_message("–ö–æ–º–Ω–∞—Ç–∞ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –≤—Å–µ—Ö.", ephemeral=True)


    @bot.event
    async def on_voice_state_update(member, before, after):
        if after.channel and after.channel.id == JOIN_CHANNEL_ID:
            guild = member.guild

            try:
                category = after.channel.category

                # –°–æ–∑–¥–∞—ë–º –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
                voice_channel = await guild.create_voice_channel(
                    name=f"–ö–æ–º–Ω–∞—Ç–∞ {member.display_name}",
                    category=category,
                    reason="–°–æ–∑–¥–∞–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                )

                # –°–æ–∑–¥–∞—ë–º —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª
                text_channel = await guild.create_text_channel(
                    name=f"—á–∞—Ç-{member.name.lower()}",
                    category=category,
                    reason="–¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã"
                )

                # –£–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø —É –≤—Å–µ—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                await text_channel.set_permissions(guild.default_role, view_channel=False, send_messages=False)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ: –≤–ª–∞–¥–µ–ª–µ—Ü + —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª
                private_rooms[voice_channel.id] = (member, text_channel)

                # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É
                await voice_channel.set_permissions(member, connect=True, manage_channels=True)
                await text_channel.set_permissions(member, view_channel=True, send_messages=True, manage_channels=True)

                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É
                await member.move_to(voice_channel)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–∞–Ω–∞–ª
                embed = discord.Embed(
                    title="üéõ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π",
                    description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–æ–π.",
                    color=discord.Color.blue()
                )
                view = RoomControlView(owner=member, voice_channel=voice_channel, text_channel=text_channel)
                await text_channel.send(embed=embed, view=view)

                # –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã, –µ—Å–ª–∏ –≤—Å–µ –ø–æ–∫–∏–Ω—É—Ç
                async def check_empty_room(vc, tc):
                    while True:
                        try:
                            await bot.wait_for('voice_state_update', timeout=30)
                            if len(vc.members) == 0:
                                try:
                                    await vc.delete(reason="–ö–æ–º–Ω–∞—Ç–∞ –ø—É—Å—Ç–∞—è")
                                except discord.NotFound:
                                    pass
                                try:
                                    await tc.delete(reason="–ö–æ–º–Ω–∞—Ç–∞ –ø—É—Å—Ç–∞—è")
                                except discord.NotFound:
                                    pass
                                if vc.id in private_rooms:
                                    del private_rooms[vc.id]
                                break
                        except asyncio.TimeoutError:
                            continue
                        except discord.NotFound:
                            if vc.id in private_rooms:
                                del private_rooms[vc.id]
                            break

                bot.loop.create_task(check_empty_room(voice_channel, text_channel))

            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã] {e}")
