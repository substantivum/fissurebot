import discord
from discord.ext import commands
import random
import time

# –•—Ä–∞–Ω–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –¥—É—ç–ª–∏ –≤ –ø–∞–º—è—Ç–∏
pending_duels = {}

COOLDOWN = 3600  # 1 —á–∞—Å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

def setup(bot, db):
    @bot.command(name="duel")
    async def duel(ctx, opponent: discord.Member, bet: int):
        challenger_id = str(ctx.author.id)
        opponent_id = str(opponent.id)

        if opponent.bot or ctx.author == opponent:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –∏–ª–∏ –±–æ—Ç–∞ –Ω–∞ –¥—É—ç–ª—å.")
            return

        if bet <= 0:
            await ctx.send("‚ùå –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        last_used = db.get_last_used(challenger_id, "duel")
        now = time.time()
        if now - last_used < COOLDOWN:
            remaining = round((COOLDOWN - (now - last_used)) / 60, 1)
            await ctx.send(f"‚è≥ –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë **{remaining} –º–∏–Ω**, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
            return

        challenger_data = db.get_user(challenger_id)
        opponent_data = db.get_user(opponent_id)

        if challenger_data["balance"] < bet:
            await ctx.send("üí∏ –£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏.")
            return
        if opponent_data["balance"] < bet:
            await ctx.send("üí∏ –£ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏.")
            return

        if opponent_id in pending_duels:
            await ctx.send("‚è≥ –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –æ–∂–∏–¥–∞—é—â–∞—è –¥—É—ç–ª—å.")
            return

        pending_duels[opponent_id] = {
            "challenger_id": challenger_id,
            "bet": bet,
            "channel_id": ctx.channel.id
        }

        await ctx.send(f"‚öîÔ∏è {ctx.author.mention} –≤—ã–∑–≤–∞–ª {opponent.mention} –Ω–∞ –¥—É—ç–ª—å –Ω–∞ **{bet}** –º–æ–Ω–µ—Ç!\n"
                       f"{opponent.mention}, –Ω–∞–ø–∏—à–∏ `!accept` –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å.")

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        db.update_last_used(challenger_id, "duel")

    @bot.command(name="accept")
    async def accept(ctx):
        user_id = str(ctx.author.id)

        if user_id not in pending_duels:
            await ctx.send("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ –Ω–∞ –¥—É—ç–ª—å.")
            return

        duel = pending_duels.pop(user_id)
        challenger_id = duel["challenger_id"]
        bet = duel["bet"]
        channel = bot.get_channel(duel["channel_id"])

        challenger_data = db.get_user(challenger_id)
        opponent_data = db.get_user(user_id)

        if challenger_data["balance"] < bet or opponent_data["balance"] < bet:
            await channel.send("‚ùå –û–¥–∏–Ω –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–æ–ª—å—à–µ –Ω–µ –∏–º–µ–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–Ω–µ—Ç.")
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        winner_id = random.choice([challenger_id, user_id])
        loser_id = challenger_id if winner_id == user_id else user_id

        db.update_balance(winner_id, bet)
        db.update_balance(loser_id, -bet)

        winner = await bot.fetch_user(int(winner_id))
        loser = await bot.fetch_user(int(loser_id))

        embed = discord.Embed(title="üèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥—É—ç–ª–∏", color=0xFF5733)
        embed.add_field(name="üéØ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å", value=winner.display_name, inline=False)
        embed.add_field(name="üíÄ –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π", value=loser.display_name, inline=False)
        embed.add_field(name="üí∞ –°—Ç–∞–≤–∫–∞", value=f"{bet} –º–æ–Ω–µ—Ç", inline=False)
        await channel.send(embed=embed)

    @bot.command()
    async def coinflip(ctx, amount: int):
        """50/50 —à–∞–Ω—Å —É–¥–≤–æ–∏—Ç—å —Å—Ç–∞–≤–∫—É"""
        user_id = str(ctx.author.id)
        user = db.get_user(user_id)

        if amount <= 0:
            await ctx.send("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")
            return
        if user["balance"] < amount:
            await ctx.send("–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        last_used = db.get_last_used(user_id, "coinflip")
        now = time.time()
        if now - last_used < COOLDOWN:
            remaining = round((COOLDOWN - (now - last_used)) / 60, 1)
            await ctx.send(f"‚è≥ –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë **{remaining} –º–∏–Ω**, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
            return

        result = random.choice(["win", "lose"])
        if result == "win":
            db.update_balance(user_id, amount)
            await ctx.send(f"üéâ –£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –¢—ã –≤—ã–∏–≥—Ä–∞–ª {amount} –º–æ–Ω–µ—Ç.")
        else:
            db.update_balance(user_id, -amount)
            await ctx.send(f"üíÄ –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {amount} –º–æ–Ω–µ—Ç. –£–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!")

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        db.update_last_used(user_id, "coinflip")